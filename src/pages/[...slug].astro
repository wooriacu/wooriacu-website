---
import { getCollection } from "astro:content"
import Layout from "../layouts/Layout.astro"
import type { Locale } from "../utils/i18n"
import { t } from "../utils/i18n"
import { getRelativeLocaleUrl } from "astro:i18n"

export async function getStaticPaths() {
  const conditionsEntries = await getCollection("conditions")
  return conditionsEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content } = await entry.render()
const locale = (entry.data.locale || "en") as Locale

// Generate proper URLs for CTA
const contactUrl = getRelativeLocaleUrl(locale, "/") + "#contact"

// Get CTA description with condition placeholder replaced
const ctaDescription = t(locale, "cta.description").replace("{condition}", entry.data.title.toLowerCase())
---

<Layout locale={locale}>
  <main class="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
      <!-- Condition Header -->
      <div class="bg-white rounded-2xl shadow-lg p-8 mb-8 border border-green-100">
        <div class="text-center mb-6">
          {entry.data.icon && (
            <div class="text-6xl mb-4">{entry.data.icon}</div>
          )}
          <h1 class="text-4xl md:text-5xl font-bold text-green-800 mb-4 leading-tight">
            {entry.data.title}
          </h1>
          <p class="text-xl text-gray-600 leading-relaxed max-w-2xl mx-auto">
            {entry.data.description}
          </p>
        </div>
      </div>

      <!-- Condition Content -->
      <div class="bg-white rounded-2xl shadow-lg p-8 mb-8 border border-green-100">
        <article class="prose prose-lg max-w-none prose-green
          [&>h1]:text-4xl [&>h1]:font-bold [&>h1]:text-green-800 [&>h1]:mb-8 [&>h1]:mt-0 [&>h1]:pb-4 [&>h1]:border-b [&>h1]:border-green-200
          [&>h2]:text-3xl [&>h2]:font-bold [&>h2]:text-green-700 [&>h2]:mb-6 [&>h2]:mt-12
          [&>h3]:text-2xl [&>h3]:font-bold [&>h3]:text-green-600 [&>h3]:mb-4 [&>h3]:mt-10
          [&>p]:text-gray-700 [&>p]:leading-relaxed [&>p]:mb-6 [&>p]:text-lg
          [&>ul]:mb-8 [&>ul]:space-y-2 [&>ul]:list-disc [&>ul]:pl-6
          [&>ol]:mb-8 [&>ol]:space-y-2 [&>ol]:list-decimal [&>ol]:pl-6
          [&>ul>li]:text-gray-700 [&>ul>li]:text-lg [&>ul>li]:leading-relaxed [&>ul>li]:list-item
          [&>ol>li]:text-gray-700 [&>ol>li]:text-lg [&>ol>li]:leading-relaxed [&>ol>li]:list-item
          [&>ul>li::marker]:text-green-500 [&>ol>li::marker]:text-green-500
          [&>strong]:text-green-800 [&>strong]:font-semibold
          [&>a]:text-green-600 [&>a]:no-underline hover:[&>a]:text-green-800 hover:[&>a]:underline
          [&>p:first-of-type]:first-letter:text-5xl [&>p:first-of-type]:first-letter:font-bold [&>p:first-of-type]:first-letter:text-green-800 [&>p:first-of-type]:first-letter:float-left [&>p:first-of-type]:first-letter:mr-3 [&>p:first-of-type]:first-letter:mt-1">
          <Content />
        </article>
      </div>

      <!-- Call to Action -->
      <div class="bg-gradient-to-r from-green-600 to-blue-600 rounded-2xl shadow-xl p-8 text-center text-white">
        <h2 class="text-3xl font-bold mb-4">
          {t(locale, "cta.title")}
        </h2>
        <p class="text-xl mb-6 opacity-90 max-w-2xl mx-auto">
          {ctaDescription}
        </p>
        <a 
          href={contactUrl}
          class="inline-block bg-white text-green-700 font-semibold px-8 py-4 rounded-full hover:bg-green-50 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
        >
          {t(locale, "cta.button")}
        </a>
      </div>
    </div>
  </main>
</Layout>
